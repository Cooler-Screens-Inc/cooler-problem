trigger:
  branches:
    include:
      - '*'
  paths:
    exclude:
      - README.md

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: Cooler Engineering/cloud-platform
      ref: refs/tags/pipelines/20220809.1

variables:
  - template: pipelines/variables.yml@templates
  - name: dockerImage
    value: $(azureContainerRegistry).azurecr.io/$(dockerRepository):$(dockerTag)

stages:
  - stage: Test
    jobs:
      - template: pipelines/security-scans.yml@templates
        parameters:
          projectName: $(Build.Repo.Name)
      - job: unit_tests
        displayName: Unit tests
        container: node:16
        steps:
          - bash: npm ci --legacy-peer-deps
            displayName: Npm Install
          - bash: npm run test
            displayName: Run tests

  - stage: Build
    dependsOn: Test
    jobs:
      - job: openapi
        displayName: Generate OpenAPI Spec
        container: node:16
        steps:
          - bash: npm i --legacy-peer-deps ts-node
            displayName: Download ts-node
          - bash: npm run openapi
            displayName: Create file
          - publish: infra
            artifact: infra
      - template: pipelines/docker-publish.yml@templates

  - stage: Dev
    dependsOn: Build
    displayName: dev Deploy
    condition: and(succeeded(), eq(variables.isMain, 'true'))
    jobs:
      - job: deploy
        displayName: Deploy to Dev
        steps:
          - template: pipelines/bicep-deploy.yml@templates
            parameters:
              environment: dev
              onlyDeployCode: 'false' # Does nothing
              dockerImageUri: $(dockerImage)

  - stage: QA
    dependsOn:
      - Build
      - Dev
    # Require build to always succeed, and dev to succeed or be skipped (e.g. for manual deploys)
    condition: |
      and(
        in(dependencies.Build.result, 'Succeeded'),
        in(dependencies.Dev.result, 'Succeeded', 'Skipped'),
        or(
          eq(variables.isMain, 'true'),
          eq(variables.isManual, 'true')
        )
      )
    displayName: QA Deploy
    jobs:
      - job: deploy
        displayName: Deploy to QA
        steps:
          - template: pipelines/bicep-deploy.yml@templates
            parameters:
              environment: qa
              onlyDeployCode: 'false' # Does nothing
              dockerImageUri: $(dockerImage)

  - stage: Prod
    dependsOn: QA
    displayName: Prod Deploy
    jobs:
      - job: deploy
        displayName: Deploy to Prod
        steps:
          - template: pipelines/bicep-deploy.yml@templates
            parameters:
              environment: prod
              onlyDeployCode: 'false' # Does nothing
              dockerImageUri: $(dockerImage)